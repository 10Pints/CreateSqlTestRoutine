      -- script params
      -- 0: crt rtn
      -- 1: table              was 2
      -- 2: crt parameters     was 1 
      -- 3: get parameters [,@a = a]*

      DECLARE 
          @id      INT
         ,@cnt_1   INT = 0
         ,@cnt_2   INT = 0
         ,@cnt_3   INT = 0

      -- get the initial count
      SELECT cnt_1 = COUNT(*) FROM {1};

      -- Get the expected state resulting from the creation

      -- Create a new item (makes sure delete later in all scenarios)
      -- update this call with the actual parameters
      EXEC {0} {2}; -- create sp and the crt params

      -- Check a record was added
      EXEC tSQLt.AssertNotEquals 0, @id;
      SELECT @cnt_2 = COUNT(*)-1 FROM {2};
      EXEC tSQLt.AssertEquals @cnt_1, @cnt_2;

      ---------------------------------------------
      -- Crt any dependencies
      ---------------------------------------------

      -- Chk state
      IF NOT EXISTS (SELECT 1 FROM {1} WHERE {1}_id = @id)
      BEGIN
         THROW 53954 'test item not created';
      END

      -- Get the inserted row and check the columns
      SELECT -- get params:
	   EXEC tSQLt.AssertEquals @inp_family_name   , @act_family_name    ," family_name"      
	   EXEC tSQLt.AssertEquals @inp_first_name    , @act_first_name     ," first_name"     
	   EXEC tSQLt.AssertEquals @inp_middle_name   , @act_middle_name    ," middle_name"     

	      {3}                  
      FROM [{1}] WHERE {2}_id = @id;


      -- All scenarios: delete the newly created state including dependencies
      DELETE FROM {1} WHERE {1}_id = @id;

      -- check row gone
      IF EXISTS (SELECT 1 FROM {1} WHERE {1}_id = @id)
      BEGIN
         THROW 53955 'test item not deleted at end of test';
      END

